{"ast":null,"code":"var _jsxFileName = \"/Users/robertocaroca/Documents/GitHub/tic-tac-toe/tic-tac-toe/src/tictactoe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GameBoard from \"./GameBoard\";\nimport GameScore from \"./GameScore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicTacToe = () => {\n  _s();\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [currentPlayer, setCurrentPlayer] = useState(\"X\");\n  const handleSquareClick = index => {\n    if (squares[index] || calculateWinner(squares)) {\n      return;\n    }\n    const updatedSquares = [...squares];\n    updatedSquares[index] = currentPlayer;\n    setSquares(updatedSquares);\n    setCurrentPlayer(prevPlayer => prevPlayer === \"X\" ? \"O\" : \"X\");\n  };\n  const calculateWinner = squares => {\n    // Logic for calculating the winner\n    // ...\n  };\n  const handleReset = () => {\n    setSquares(Array(9).fill(null));\n    setCurrentPlayer(\"X\");\n  };\n  const winner = calculateWinner(squares);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tic-tac-toe\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameScore, {\n      currentPlayer: currentPlayer,\n      winner: winner,\n      handleReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n      squares: squares,\n      handleSquareClick: handleSquareClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToe, \"yH/DR1fIoOneCjIzqjndP9p42VI=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","GameBoard","GameScore","jsxDEV","_jsxDEV","TicTacToe","_s","squares","setSquares","Array","fill","currentPlayer","setCurrentPlayer","handleSquareClick","index","calculateWinner","updatedSquares","prevPlayer","handleReset","winner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/robertocaroca/Documents/GitHub/tic-tac-toe/tic-tac-toe/src/tictactoe.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport GameBoard from \"./GameBoard\";\nimport GameScore from \"./GameScore\";\n\nconst TicTacToe = () => {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [currentPlayer, setCurrentPlayer] = useState(\"X\");\n\n  const handleSquareClick = (index) => {\n    if (squares[index] || calculateWinner(squares)) {\n      return;\n    }\n\n    const updatedSquares = [...squares];\n    updatedSquares[index] = currentPlayer;\n    setSquares(updatedSquares);\n    setCurrentPlayer((prevPlayer) => (prevPlayer === \"X\" ? \"O\" : \"X\"));\n  };\n\n  const calculateWinner = (squares) => {\n    // Logic for calculating the winner\n    // ...\n  };\n\n  const handleReset = () => {\n    setSquares(Array(9).fill(null));\n    setCurrentPlayer(\"X\");\n  };\n\n  const winner = calculateWinner(squares);\n\n  return (\n    <div className=\"tic-tac-toe\">\n      <h1>Tic Tac Toe</h1>\n      <GameScore\n        currentPlayer={currentPlayer}\n        winner={winner}\n        handleReset={handleReset}\n      />\n      <GameBoard squares={squares} handleSquareClick={handleSquareClick} />\n    </div>\n  );\n};\n\nexport default TicTacToe;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EAEvD,MAAMa,iBAAiB,GAAIC,KAAK,IAAK;IACnC,IAAIP,OAAO,CAACO,KAAK,CAAC,IAAIC,eAAe,CAACR,OAAO,CAAC,EAAE;MAC9C;IACF;IAEA,MAAMS,cAAc,GAAG,CAAC,GAAGT,OAAO,CAAC;IACnCS,cAAc,CAACF,KAAK,CAAC,GAAGH,aAAa;IACrCH,UAAU,CAACQ,cAAc,CAAC;IAC1BJ,gBAAgB,CAAEK,UAAU,IAAMA,UAAU,KAAK,GAAG,GAAG,GAAG,GAAG,GAAI,CAAC;EACpE,CAAC;EAED,MAAMF,eAAe,GAAIR,OAAO,IAAK;IACnC;IACA;EAAA,CACD;EAED,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBV,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/BE,gBAAgB,CAAC,GAAG,CAAC;EACvB,CAAC;EAED,MAAMO,MAAM,GAAGJ,eAAe,CAACR,OAAO,CAAC;EAEvC,oBACEH,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BjB,OAAA;MAAAiB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBrB,OAAA,CAACF,SAAS;MACRS,aAAa,EAAEA,aAAc;MAC7BQ,MAAM,EAAEA,MAAO;MACfD,WAAW,EAAEA;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFrB,OAAA,CAACH,SAAS;MAACM,OAAO,EAAEA,OAAQ;MAACM,iBAAiB,EAAEA;IAAkB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCID,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}